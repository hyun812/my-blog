/* common markdown */
.prose {
  @apply text-secondary;
}
.prose strong,
.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose thead th {
  @apply text-primary break-words;
}

.prose del {
  @apply text-mute;
}

.prose p {
  @apply leading-8;
}

.prose img {
  @apply my-0 mx-auto;
}
.prose img + span {
  display: block;
  margin-top: 0.5rem;
}

.prose a {
  @apply text-primary break-words transition-all;
  @apply decoration-basic-450 underline-offset-2 hover:decoration-basic-350;
}
.prose a:has(strong) {
  @apply decoration-yellow-300 decoration-wavy underline-offset-1 hover:decoration-yellow-400;
  @apply dark:decoration-yellow-300/70 dark:hover:decoration-yellow-300/90;
}

.prose code {
  font-family: var(--font-mono), Consolas, Monaco, 'Andale Mono', monospace;
}

.prose code:not(:where(pre *)) {
  @apply text-primary rounded-lg px-2 py-0.5 content-none;
  @apply bg-basic-200 dark:bg-basic-750;
}

.prose pre::-webkit-scrollbar {
  display: none;
}
.prose pre {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* prose first child, not <TocTop /> */
.prose > :first-child {
  margin-top: 3rem !important;
}
.prose > .lg\:hidden + * {
  @apply lg:mt-12;
}

/* rehype-autolink-headings */
.prose .anchor {
  @apply absolute -ml-10 mt-1 flex h-6 w-6 items-center justify-center opacity-0 transition-all;
  @apply rounded-md border-none no-underline ring-1 ring-basic-700/10;
  @apply hover:shadow hover:ring-basic-700/30 dark:bg-basic-700 dark:text-basic-400;
}

.prose .anchor:after {
  content: ' ';
  mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' aria-hidden='true'%3E%3Cpath d='M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10' stroke='currentColor' strokeWidth='1.5' strokeLinecap='round' /%3E%3C/svg%3E");
  mask-repeat: no-repeat;
  mask-position: center;

  @apply h-4 w-4 bg-basic-700 dark:bg-basic-400;
}

.prose .anchor:hover,
.prose *:hover > .anchor {
  @apply md:opacity-100;
}

.prose ul,
.prose ol {
  padding-left: 1.2rem;
}

.prose :where(blockquote):not(:where([class~='not-prose'] *)) {
  font-style: normal !important;
  border-left-color: var(--prism-highlight) !important;
  margin: 1.4rem 0 !important;
  @apply p-4 bg-basic-100 dark:bg-basic-800;
}

.prose :where(p, ul, ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin: 1.1rem 0 !important;
}

.prose blockquote > :first-child {
  margin: 0;
}
